- Object

    const obj = {
        name : Peter, 
        age : 90,
        sayhii() {
            ....
        },
        anyfunction() {
            ....
        }
    }

    obj.sayhii();

- Obejct can be created using 4 ways.

1. Literals 

    const obj = {
        name : Aditya
    }

2. Contructor / New operator

    function user(name, age) {

        this = {}; // Behind the scenes.

        this.name = name;
        this.age = age

        return this; // Behind the scenes.
    }

    const obj = new user('John', 20);


    *** Check for new operator, if not found than add new.

   function User(name) {

        if (!new.target) { // if you run me without new
            return new User(name); // ...I will add new for you
            }

            this.name = name;
                }

            let john = User("John"); // redirects call to new User
            alert(john.name); // John
    
    **** We can omit '()' if there is no arugment.

    let user = new User; same as new User();

3. Class

    class User {
        constructor(name, age) {
            this.name = name;
            this.age = age;
        }
    }

    const obj = new User('Shiva', 19);

4. Obect.create method

    var Car = {
    model: 'BMW',
    color: 'red'
    }

   const obj = Object.create(Car);

<--------------------------------------------------->

- Some Methods on Objects.

const obj = {
    name: Jake,
    age: 45
}

* Object.keys(obj) // Iterate over keys. ---> [name, age];
* Object.values(obj) // Iterate over values. ---> [Jake, 45];
* Object.entries(obj) // Iterate over values. ---> [ [name, Jake], [age, 45] ];
* Object.fromEntries([ [name, Jake], [age, 45] ]) // Gives an object ---> obj = {
                                                                                    name: Jake,
                                                                                    age: 45
                                                                                };

<--------------------------------------------------->

- Looping on Objects.

* Iteration

    for(let key in obj) {
        `${key} : ${obj[key]}`
    }

* Using entries.

    for(let [key, value] of Object.entries(obj)) {
        `${key} : ${value}`
    }

<--------------------------------------------------->

Object destructuring

* Basic syntax
    let {var1, var2} = {var1:... , var2:...};

    const obj = {
        name: john,
        age: 65,
        gender: male
    }

    let {name, age, gender} = obj;

    {{name}} // john
    {{age}} // 65
    {{gender}} // male

**** Order doesn't matter while destrucuting an object unlike in arrays. 
       A Left side variable will get value from the same key name. ****
    
    const obj = {
        name: john,
        age: 65,
        gender: male
    }

    let {age, gender, name} = obj;

    {{name}} // john
    {{age}} // 65
    {{gender}} // male


*** The rest pattern (...rest)

    let {age , ...rest} = obj;

    alert(age); // 65
    alert(rest); // { name : john, gender : male};

*** Using default values

    let {age = 20 , gender = 'Male'} = {age:18};

    alert(age); // 18
    alert(gender); // Male (Default);

*** Using different variables

    let {age:a, gender:gen = 'Male'} = {age:18}; // let {prop : varName = default, ...rest} = object

    alert(a); // 18
    alert(gen); // Male (Default);
